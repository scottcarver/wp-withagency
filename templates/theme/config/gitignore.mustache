# WP CLI Parameters

# Theme Generator Parameters
prefix: {{prefix}}
domain: {{domain}}
name: {{name}}
slug: {{slug}}

# block|component|endpoint|posttype|route|taxonomy|template|theme
# Complex Examples Here:
# https://make.wordpress.org/cli/handbook/references/config/#config-files

# Custom Parameters /* https://medium.com/@rossinigiovanni/gitlab-ci-how-to-reuse-your-yml-code-96a82b3d587e */
.themevars: &themevars
  prefix: {{prefix}}
  domain: {{domain}}
  name: {{name}}
  slug: {{slug}}
  dest:
    block_folder: /library/block/
    block_file: library/function/custom/custom_blocks.php
    component_folder: /library/component/
    component_file: library/function/custom/custom_components.php
    endpoint_folder: /library/endpoint/
    endpoint_file: library/function/custom/custom_endpoints.php
    posttype_folder: /library/posttype/
    posttype_file: library/function/custom/custom_posttype.php
    route_folder: /library/route/
    route_file: library/function/custom/custom_route.php
    taxonomy_folder: /library/taxonomy/
    taxonomy_file: library/function/custom/custom_taxonomy.php
    template_folder: /library/template/
    template_file: library/function/custom/custom_template.php
    theme_folder: /library/theme/
    theme_file: library/function/custom/custom_theme.php
# Reuse the themevars everywhere. This works but is repetitive compared to custom_constants.php
# because --prompt allows you to override these, it's unlikely this Technique will Worl
withagency block:
  <<: *themevars
withagency component:
  <<: *themevars
withagency endpoint:
  <<: *themevars
withagency posttype:
  <<: *themevars
withagency route:
  <<: *themevars
withagency taxonomy:
  <<: *themevars
withagency template:
  <<: *themevars
withagency theme:
  <<: *themevars